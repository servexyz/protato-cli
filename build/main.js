#!/usr/bin/env node
!function(t,e){for(var n in e)t[n]=e[n]}(exports,function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){t.exports=n(1)},function(t,e,n){"use strict";var r=n(2),o=r(n(3)),a=r(n(4)),i=console.log,u=n(5),c=n(6).init,l=n(7).printMirror,p=n(8),s=n(9),f='$ protato --help\n\n\tUsage\n\t$ protato [command][--flag]\n\n\tCommands\n\t$ protato yalc\n\t> List your current packages; install yalc if directory not found\n\n\t$ protato config\n\t> Generate an empty config if you don\'t have one in your CWD\n\n\t$ protato watch\n\t> Begin watching your child modules for updates\n\n\n\tOptions\n\t--yalc (-y)\n\t> "link" --\x3e Symlinks child module into parent module\n\t> "add" --\x3e dependency in your parent package.json\n\n\n\tExamples\n\t$ protato yalc\n\t> --\x3e "package1", "package2"\n\n\t$ protato config\n\t> --\x3e ".protato.js has been created"\n\n\t$ protato watch -ya\n\t> --\x3e "Now adding child modules to parent module"\n\n\t$ protato watch -yl\n\t> --\x3e "Now linking child modules to parent module"\n\t',d=u(f,{flags:{yalc:{type:"string",default:"link"}}});function y(){return(y=(0,a.default)(o.default.mark(function t(){var e,r;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:e=n(10)(p.resolve(process.cwd(),"./.protato.js")),r=e.config,l({config:r},"blue","grey"),c(process.cwd(),r);case 3:case"end":return t.stop()}},t)}))).apply(this,arguments)}switch(i("input: ".concat(d.input[0]||"link","\n flags: ").concat(JSON.stringify(d.flags,null,2))),d.input[0].toLowerCase()){case"watch":!function(){y.apply(this,arguments)}();break;default:i("".concat(s.red(d.input[0])," is not recognized as a command"))}t.exports={helpMenuText:f}},function(t,e){t.exports=require("@babel/runtime/helpers/interopRequireDefault")},function(t,e){t.exports=require("@babel/runtime/regenerator")},function(t,e){t.exports=require("@babel/runtime/helpers/asyncToGenerator")},function(t,e){t.exports=require("meow")},function(t,e){t.exports=require("protato-lib")},function(t,e){t.exports=require("tacker")},function(t,e){t.exports=require("path")},function(t,e){t.exports=require("chalk")},function(t,e){function n(t){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,t.exports=n,n.id=10}]));
//# sourceMappingURL=main.js.map